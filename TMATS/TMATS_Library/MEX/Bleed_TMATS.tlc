%% File : Bleed_TMATS.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for Bleed_TMATS
%%
%implements Bleed_TMATS "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
    %%
    %% The Target Language must be C
    %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("types_TMATS.h")>

    %<SLibAddToStaticSources("Bleed_TMATS_body.c")>

    %openfile forwardDecls
      extern void Bleed_TMATS_body(double *y, double *y1, const double *u, const double *BldInFlow, const BleedStruct* prm);
      BleedStruct bleedStruct;
    %closefile forwardDecls

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Definitions", forwardDecls)>

%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
    %%
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
    %%
    bleedStruct.WfracLen            = %<LibBlockParameter(WfracLen,"","",0)>;
    bleedStruct.Wfrac               = (double*)(%<LibBlockParameterBaseAddr(Wfrac)>);
    bleedStruct.IWork               = &%<LibBlockIWork(Errors,"","",0)>;
    bleedStruct.BlkNm               = "%<LibGetFormattedBlockPath(block)>";

    %assign y_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y_dataType = LibBlockOutputSignalDataTypeName(0,"")
    %assign y1_ptr = LibBlockOutputSignalAddr(1, "", "", 0)
    %assign y1_dataType = LibBlockOutputSignalDataTypeName(1,"")

    %assign u_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u_dataType = LibBlockInputSignalDataTypeName(0,"")
    %assign BldInFlow_ptr = LibBlockInputSignalAddr(1, "", "", 0)
    %assign BldInFlow_dataType = LibBlockInputSignalDataTypeName(1,"")
    %%
    Bleed_TMATS_body((%<y_dataType>*)%<y_ptr>,\ 
                         (%<y1_dataType>*)%<y1_ptr>,\ 
                         (%<u_dataType>*)%<u_ptr>,\ 
                         (%<BldInFlow_dataType>*)%<BldInFlow_ptr>,\ 
                          &bleedStruct);
    %%
%endfunction

%% [EOF]
