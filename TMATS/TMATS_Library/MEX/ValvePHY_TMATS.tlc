%% File : ValvePHY_TMATS.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for ValvePHY_TMATS
%%
%implements ValvePHY_TMATS "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
    %%
    %% The Target Language must be C
    %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("types_TMATS.h")>

    %<SLibAddToStaticSources("ValvePHY_TMATS_body.c")>

    %openfile forwardDecls
      extern void ValvePHY_TMATS_body(double *y, const double *u, const ValvePHYStruct* prm);
      ValvePHYStruct valvePHYStruct;
    %closefile forwardDecls

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Definitions", forwardDecls)>

%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
    %%
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
    %%
    valvePHYStruct.s_V_Ae_vlv          = %<LibBlockParameter(s_V_Ae_vlv,"","",0)>;
    valvePHYStruct.s_V_Ae_byp          = %<LibBlockParameter(s_V_Ae_byp,"","",0)>;
    valvePHYStruct.s_V_Ae_th           = %<LibBlockParameter(s_V_Ae_th,"","",0)>;
    valvePHYStruct.X_V_FAR_vec         = (double*)(%<LibBlockParameterBaseAddr(X_V_FAR_vec)>);
    valvePHYStruct.T_V_Rt_vec          = (double*)(%<LibBlockParameterBaseAddr(T_V_Rt_vec)>);
    valvePHYStruct.Y_V_Tt_vec          = (double*)(%<LibBlockParameterBaseAddr(Y_V_Tt_vec)>);
    valvePHYStruct.T_V_gamma_array     = (double*)(%<LibBlockParameterBaseAddr(T_V_gamma_array)>);
    valvePHYStruct.A1                  = %<LibBlockParameterSize(X_V_FAR_vec)[1]>;
    valvePHYStruct.B1                  = %<LibBlockParameterSize(Y_V_Tt_vec)[1]>;

    valvePHYStruct.IWork               = &%<LibBlockIWork(Errors,"","",0)>;
    valvePHYStruct.BlkNm               = "%<LibGetFormattedBlockPath(block)>";

    %assign y_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y_dataType = LibBlockOutputSignalDataTypeName(0,"")

    %assign u_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u_dataType = LibBlockInputSignalDataTypeName(0,"")

    %%
    ValvePHY_TMATS_body((%<y_dataType>*)%<y_ptr>,\ 
                      (%<u_dataType>*)%<u_ptr>,\ 
                       &valvePHYStruct);
    %%
%endfunction

%% [EOF]
