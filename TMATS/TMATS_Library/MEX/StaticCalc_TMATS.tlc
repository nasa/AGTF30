%% File : StaticCalc_TMATS.tlc
%%
%% Description: 
%%   Simulink Coder TLC Code Generation file for StaticCalc_TMATS
%%
%implements StaticCalc_TMATS "C"

%% Function: BlockTypeSetup ===============================================
%%
%function BlockTypeSetup(block, system) void
    %%
    %% The Target Language must be C
    %if ::GenCPP==1
    %<LibReportFatalError("This S-Function generated by the Legacy Code Tool must be only used with the C Target Language")>
    %endif

    %<LibAddToCommonIncludes("types_TMATS.h")>

    %<SLibAddToStaticSources("StaticCalc_TMATS_body.c")>

    %openfile forwardDecls
      extern void StaticCalc_TMATS_body(double *y, const double *u, const StaticCalcStruct* prm);
      StaticCalcStruct staticCalcStruct;
    %closefile forwardDecls

    %assign srcFile = LibGetModelDotCFile()
    %<LibSetSourceFileSection(srcFile, "Definitions", forwardDecls)>

%endfunction

%% Function: BlockInstanceSetup ===========================================
%%
%function BlockInstanceSetup(block, system) void
    %%
    %<LibBlockSetIsExpressionCompliant(block)>
%endfunction

%% Function: Outputs ======================================================
%%
%function Outputs(block, system) Output
    %%
    staticCalcStruct.AthroatIn           = %<LibBlockParameter(AthroatIn,"","",0)>;
    staticCalcStruct.MNIn                = %<LibBlockParameter(MNIn,"","",0)>;
    staticCalcStruct.SolveType           = %<LibBlockParameter(SolveType,"","",0)>;
    staticCalcStruct.X_FARVec            = (double*)(%<LibBlockParameterBaseAddr(X_FARVec)>);
    staticCalcStruct.T_RtArray           = (double*)(%<LibBlockParameterBaseAddr(T_RtArray)>);
    staticCalcStruct.Y_TtVec             = (double*)(%<LibBlockParameterBaseAddr(Y_TtVec)>);
    staticCalcStruct.T_gammaArray        = (double*)(%<LibBlockParameterBaseAddr(T_gammaArray)>);
    staticCalcStruct.A                   = %<LibBlockParameterSize(X_FARVec)[1]>;
    staticCalcStruct.B                   = %<LibBlockParameterSize(Y_TtVec)[1]>;

    staticCalcStruct.IWork               = &%<LibBlockIWork(Errors,"","",0)>;

    %assign y_ptr = LibBlockOutputSignalAddr(0, "", "", 0)
    %assign y_dataType = LibBlockOutputSignalDataTypeName(0,"")

    %assign u_ptr = LibBlockInputSignalAddr(0, "", "", 0)
    %assign u_dataType = LibBlockInputSignalDataTypeName(0,"")

    %%
    StaticCalc_TMATS_body((%<y_dataType>*)%<y_ptr>,\ 
                    (%<u_dataType>*)%<u_ptr>,\ 
                     &staticCalcStruct);
    %%
%endfunction

%% [EOF]
